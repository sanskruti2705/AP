UART 0
#include<lpc214x.h>

void uart_init(){
	PINSEL0 |=0X00000005; // set TxD, RxD pins of UART0
	U0FCR=0X07; // enable and reset UART0 FIFO
	U0LCR=0X83; // enable DLAB to set DLL, DLM
	U0DLL=0X62; // set the baud rate to 9600
	U0DLM=0x00;
	U0LCR=0X03; // disable DLAB
}

unsigned char UART0_PutChar(unsigned char ch)
{
	if(ch == '\n'){ // check if character is new line
		while(!(U0LSR & 0x20)); // wait until uart0 transmitter is ready
		U0THR = 0x0D; // carriage return
	}
	while(!(U0LSR & 0x20)); 
	return (U0THR = ch); // transmit the character
}

unsigned char UART0_GetChar(void)
{
	while(!(U0LSR & 0x01)); // wait until uart0 receiver has data
	return (U0RBR); // return the received character
}

void UART0_S(unsigned char *ch)
{
	while(*ch){
		UART0_PutChar(*ch++); // transmit each character in the string
	}
}



MAIN
#include <lpc214x.h>
#include "UART_INIT.c"

unsigned char data_rcv[3];
unsigned int adc_data;
unsigned char cr[] = "\n\r";
unsigned char msg[]= "ADC value in hex: ";
void adc_init(void)
{
	PINSEL1 |= 0X01000000;
	AD0CR = 0X00200302;
}

unsigned int read_adc1(void)
{
	unsigned int data;
	AD0CR=0x01200302;
	while(!(AD0DR1&0x80000000));
	data=((AD0DR1>>6)&0X3FF);
	return data;
}

void nibble_sep(void)
{
	data_rcv[2]=(adc_data & 0x0000000F);
	data_rcv[1]=(adc_data & 0x000000F0)>>4;
	data_rcv[0]=(adc_data & 0x00000F00)>>8;
}

void hex_ascii()
{
	unsigned int count, result;
	for(count=0;count<3;count++)
	{
		if(data_rcv[count]<10)
		{
			result=data_rcv[count]+0x30;
			UART0_PutChar(result);
		}
		else
		{
			result=data_rcv[count]+0x37;
			UART0_PutChar(result);
		}
	}
	UART0_S(cr);
}

int main(void)
{
	adc_init();
	uart_init();
	while(1){
		adc_data= read_adc1();
		delay(50000);
		nibble_sep();
		UART0_S(msg);
		hex_ascii();
	}
}	
